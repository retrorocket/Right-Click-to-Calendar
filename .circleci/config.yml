version: 2.1
jobs:
  build:
    working_directory: ~/workspace # ステップが実行されるディレクトリ
    docker: # Dockerでステップを実行
      - image: circleci/node:latest
    steps:
      - checkout # ソースコードを作業ディレクトリにチェックアウト
      - restore_cache: # 依存関係キャッシュを復元
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: install-yarn
          command: yarn
      - save_cache: # 依存関係キャッシュを保存
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .

  test:
    docker: # Dockerでステップを実行
      - image: circleci/node:latest
    steps:
      # 共有したworkspaceをアタッチする
      - attach_workspace:
          at: .
      - run:
          name: Jestによるテストの実行
          command: yarn jest -i --ci --runInBand
      - store_artifacts:
          path: coverage
      - store_artifacts:
          path: reports
      - store_test_results:
          path: reports

  lint:
    docker: # Dockerでステップを実行
      - image: circleci/node:latest
    steps:
      # 共有したworkspaceをアタッチする
      - attach_workspace:
          at: .
      - run:
          name: ESLintの実行
          command: yarn eslint . --format junit --output-file reports/eslint/results.xml
      - store_artifacts:
          path: reports
      - store_test_results:
          path: reports

  create_zip:
    docker: # Dockerでステップを実行
      - image: circleci/node:latest
    steps:
      # 共有したworkspaceをアタッチする
      - attach_workspace:
          at: .
      # 設定した秘密鍵のFingerPrintを追記する
      - add_ssh_keys:
          fingerprints:
            - "e4:f6:0b:8b:a8:cf:d8:6b:74:5e:99:68:92:f3:da:1b"
      - run: sudo apt install -y rsync
      - run: ssh-keyscan -p ${PORT} ${HOST_NAME} >> ~/.ssh/known_hosts
      - run: rsync -e "ssh -p ${PORT}" -avz ${USER}@${HOST_NAME}:/home/${USER}/public/icons ./app/
      - run: cd ./app && zip -r release ./*
      - store_artifacts:
          path: ./app/release.zip

workflows:
  version: 2
  publish: # workflow名
    jobs:
      - build
      - test:
          requires: # buildが成功したら
            - build
      - lint:
          requires:
            - build
      - create_zip:
          requires:
            - test
            - lint
          filters:
            branches: # 指定ブランチでのみ実行する
              only:
                - develop
